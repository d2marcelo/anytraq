package com.brtracker.shared.utils.packet;

import java.util.HashMap;
import java.util.Map;

public class XirgoFixtures {

	public static short[] getPeriodicOn() {
		
		short[] unitPacket = {
				0x24, 0x24, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x35, 0x32, 0x32, 0x37, 0x32, 0x32, 0x2c, 0x34, 0x30, 0x30, 0x31, 0x2c, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x30, 0x37, 0x2f, 0x30, 0x34, 0x2c, 0x31, 0x37, 0x3a, 0x31, 0x36, 0x3a, 0x35, 0x30, 0x2c, 0x33, 0x37, 0x2e, 0x33, 0x37, 0x37, 0x38, 0x32, 0x2c, 0x2d, 0x31, 0x32, 0x31, 0x2e, 0x39, 0x34, 0x30, 0x39, 0x38, 0x2c, 0x32, 0x33, 0x2e, 0x38, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x35, 0x2c, 0x35, 0x32, 0x37, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x36, 0x2c, 0x31, 0x2e, 0x33, 0x2c, 0x31, 0x2c, 0x32, 0x31, 0x2e, 0x30, 0x2c, 0x31, 0x34, 0x2e, 0x32, 0x2c, 0x31, 0x37, 0x2c, 0x31, 0x2c, 0x30, 0x23, 0x23
		};
		
		PacketWriterController writer = new PacketWriterController();
		
		Map<String, String> headers = new HashMap<String, String>();
		// Netty adds this header (header id, delimiter, header value, delimiter): h01 0 3001 0
		headers.put("h01", "8084");
		// Netty adds this header (header id, delimiter, header value, delimiter): h02 0 123423452345 0
		headers.put("h02", "123423452345");
		short[] header = writer.buildHeader(headers);
		
		short[] packet = new short[header.length + unitPacket.length];
		
		for (int i=0; i<header.length; i++) {
			packet[i] = header[i];
		}
		
		for (int i=0; i<unitPacket.length; i++) {
			packet[header.length + i] = unitPacket[i];
		}
		return packet;
	}
	
	public static short[] getIgnitionOn2() {
		return new short[] {
				0x68, 0x30, 0x31, 0x0, 0x38, 0x30, 0x38, 0x34, 0x0, 0x68, 0x30, 0x32, 0x0, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x35, 0x32, 0x32, 0x37, 0x32, 0x32, 0x0, 0x68, 0x30, 0x33, 0x0, 0x31, 0x33, 0x34, 0x31, 0x37, 0x38, 0x31, 0x30, 0x35, 0x30, 0x38, 0x38, 0x32, 0x0, 0x24, 0x24, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x35, 0x32, 0x32, 0x37, 0x32, 0x32, 0x2c, 0x36, 0x30, 0x31, 0x31, 0x2c, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x30, 0x37, 0x2f, 0x30, 0x38, 0x2c, 0x32, 0x30, 0x3a, 0x35, 0x37, 0x3a, 0x33, 0x30, 0x2c, 0x33, 0x37, 0x2e, 0x33, 0x35, 0x38, 0x33, 0x36, 0x2c, 0x2d, 0x31, 0x32, 0x31, 0x2e, 0x39, 0x33, 0x35, 0x35, 0x32, 0x2c, 0x32, 0x35, 0x2e, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x36, 0x2c, 0x31, 0x2e, 0x34, 0x2c, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x31, 0x34, 0x2e, 0x32, 0x2c, 0x31, 0x36, 0x2c, 0x31, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x23, 0x23, 0x0
		};
	}
	
	public static short[] getIgnitionOn() {
		return new short[] {
				0x68, 0x30, 0x31, 0x0, 0x38, 0x30, 0x38, 0x34, 0x0, 0x68, 0x30, 0x32, 0x0, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x36, 0x37, 0x36, 0x32, 0x33, 0x39, 0x0, 0x68, 0x30, 0x33, 0x0, 0x31, 0x33, 0x34, 0x37, 0x32, 0x30, 0x37, 0x39, 0x34, 0x38, 0x35, 0x31, 0x31, 0x0, 0x24, 0x24, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x36, 0x37, 0x36, 0x32, 0x33, 0x39, 0x2c, 0x36, 0x30, 0x31, 0x31, 0x2c, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x30, 0x39, 0x2f, 0x30, 0x39, 0x2c, 0x31, 0x36, 0x3a, 0x32, 0x37, 0x3a, 0x31, 0x38, 0x2c, 0x33, 0x36, 0x2e, 0x39, 0x36, 0x37, 0x36, 0x36, 0x2c, 0x2d, 0x31, 0x32, 0x32, 0x2e, 0x30, 0x30, 0x38, 0x33, 0x37, 0x2c, 0x31, 0x33, 0x2e, 0x36, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x39, 0x2c, 0x31, 0x2e, 0x31, 0x2c, 0x31, 0x32, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x31, 0x34, 0x2e, 0x33, 0x2c, 0x31, 0x30, 0x2c, 0x31, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x23, 0x23, 0x0
		};
	}

	public static short[] getIgnitionOff() {
		return new short[] {
				0x68, 0x30, 0x31, 0x0, 0x38, 0x30, 0x38, 0x34, 0x0, 0x68, 0x30, 0x32, 0x0, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x36, 0x37, 0x36, 0x32, 0x33, 0x39, 0x0, 0x68, 0x30, 0x33, 0x0, 0x31, 0x33, 0x34, 0x37, 0x32, 0x33, 0x38, 0x32, 0x34, 0x39, 0x33, 0x34, 0x36, 0x0, 0x24, 0x24, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x36, 0x37, 0x36, 0x32, 0x33, 0x39, 0x2c, 0x36, 0x30, 0x31, 0x32, 0x2c, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x30, 0x39, 0x2f, 0x31, 0x30, 0x2c, 0x30, 0x30, 0x3a, 0x35, 0x32, 0x3a, 0x32, 0x30, 0x2c, 0x33, 0x36, 0x2e, 0x39, 0x36, 0x35, 0x32, 0x38, 0x2c, 0x2d, 0x31, 0x32, 0x32, 0x2e, 0x30, 0x31, 0x30, 0x39, 0x30, 0x2c, 0x31, 0x36, 0x2e, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x31, 0x30, 0x2c, 0x31, 0x2e, 0x31, 0x2c, 0x31, 0x33, 0x34, 0x2c, 0x31, 0x31, 0x2e, 0x31, 0x2c, 0x31, 0x33, 0x2e, 0x31, 0x2c, 0x31, 0x33, 0x2c, 0x31, 0x2c, 0x30, 0x23, 0x23, 0x0
		};
	}

	public static short[] getPeriodicOff() {
		return new short[] {
				0x68, 0x30, 0x31, 0x0, 0x38, 0x30, 0x38, 0x34, 0x0, 0x68, 0x30, 0x32, 0x0, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x35, 0x33, 0x32, 0x38, 0x33, 0x38, 0x0, 0x68, 0x30, 0x33, 0x0, 0x31, 0x33, 0x34, 0x37, 0x32, 0x35, 0x30, 0x36, 0x36, 0x33, 0x39, 0x34, 0x35, 0x0, 0x24, 0x24, 0x33, 0x35, 0x32, 0x30, 0x35, 0x34, 0x30, 0x35, 0x30, 0x35, 0x33, 0x32, 0x38, 0x33, 0x38, 0x2c, 0x34, 0x30, 0x30, 0x32, 0x2c, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x30, 0x39, 0x2f, 0x31, 0x30, 0x2c, 0x30, 0x34, 0x3a, 0x31, 0x39, 0x3a, 0x31, 0x35, 0x2c, 0x33, 0x39, 0x2e, 0x31, 0x38, 0x35, 0x34, 0x36, 0x2c, 0x2d, 0x31, 0x32, 0x31, 0x2e, 0x30, 0x36, 0x36, 0x36, 0x33, 0x2c, 0x37, 0x33, 0x38, 0x2e, 0x36, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x31, 0x32, 0x2c, 0x31, 0x2e, 0x30, 0x2c, 0x31, 0x39, 0x31, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x31, 0x32, 0x2e, 0x36, 0x2c, 0x31, 0x32, 0x2c, 0x31, 0x2c, 0x30, 0x23, 0x23, 0x0
		};
	}

}
